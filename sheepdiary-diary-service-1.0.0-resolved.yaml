openapi: 3.0.3
info:
  title: Sheep Diary API
  description: 쉽다이어리 앱 서비스의 API 명세
  version: 1.0.0
servers:
- url: https://virtserver.swaggerhub.com/lgu3_sheepdiary/diary-service/1.0.0
  description: SwaggerHub API Auto Mocking
- url: /api
paths:
  /users/:
    post:
      tags:
      - Users
      summary: 회원가입
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
        required: true
      responses:
        "201":
          description: 회원가입 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /token:
    post:
      tags:
      - Auth
      summary: 로그인 (토큰 발급)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/token_body'
        required: true
      responses:
        "200":
          description: 토큰 발급 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
  /diaries/:
    get:
      tags:
      - Diaries
      summary: 다이어리 전체 조회
      responses:
        "200":
          description: 다이어리 목록 조회 성공
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Diary'
    post:
      tags:
      - Diaries
      summary: 다이어리 작성
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiaryCreate'
        required: true
      responses:
        "201":
          description: 다이어리 작성 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Diary'
  /diaries/{diary_id}:
    get:
      tags:
      - Diaries
      summary: 특정 다이어리 조회
      parameters:
      - name: diary_id
        in: path
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: 다이어리 조회 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Diary'
    put:
      tags:
      - Diaries
      summary: 다이어리 수정
      parameters:
      - name: diary_id
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiaryCreate'
        required: true
      responses:
        "200":
          description: 다이어리 수정 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Diary'
    delete:
      tags:
      - Diaries
      summary: 다이어리 삭제
      parameters:
      - name: diary_id
        in: path
        required: true
        schema:
          type: integer
      responses:
        "204":
          description: 삭제 완료
components:
  schemas:
    UserCreate:
      required:
      - password
      - username
      type: object
      properties:
        username:
          type: string
        password:
          type: string
          format: password
    User:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
    Diary:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        content:
          type: string
        date:
          type: string
          format: date
    DiaryCreate:
      required:
      - content
      - date
      - title
      type: object
      properties:
        title:
          type: string
        content:
          type: string
        date:
          type: string
          format: date
    token_body:
      required:
      - password
      - username
      type: object
      properties:
        username:
          type: string
        password:
          type: string
          format: password
    inline_response_200:
      type: object
      properties:
        access_token:
          type: string
        token_type:
          type: string